package com.example.demojpa.models;

import lombok.*;

import javax.persistence.*;

@Getter
@Setter
@ToString
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "my_person")
public class Person
{
    /**
     * AUTO -> create table person(id int primary_key, ...)
     *         insert into person(id, name, ...) VALUES(<ID>, <name>, ...)
     * IDENTITY -> create table person(id int primary_key auto_increment, ...)
     *             insert into person(name, ...) VALUES (<name>, ...)
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id; //Automatically generated by server | FE need not send this
    @Column(name = "FN", length = 30)
    private String firstName; //should not be empty
    private String lastName; //can be empty
    private Integer age; //mandatory
    private String dob;

    @Transient
    private String countryCode;
    //private transient String areaCode;
}


/**3 Types of Objects
 * 1. Transient  --> Not mapped to any row or column (Standalone)
 * 2. Persistent --> Present hibernate's session
 * 3. Detached --> Persistent objects after the session ended
 */

/**
 * hibernate's dialect
 * how to behave application run
 */

/** spring.jpa.hibernate.ddl-auto
 *  spring-configuration-metadata.json
 *  1. NONE
 *  2. validate -> No changes made to Database
 *  3. update   -> Update the schema (If required)
 *  4. create   -> Destroy previous, create a new schema
 *  5. create-drop  -> Destroy previous, create a new schema, Destroy when application stopped
 */

/**
 * DDL -> create table, create database, create index, alter table
 * DML -> insert, update, delete
 */

/**
 * Hibernate converts all the camel cases into 2 separated words by underscore
 * Hibernate converts all upper cases to lowercase
 */

//1 to 10, 11

